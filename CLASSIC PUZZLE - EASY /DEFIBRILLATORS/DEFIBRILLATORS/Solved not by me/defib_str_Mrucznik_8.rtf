{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <stdlib.h>\
#include <stdio.h>\
#include <string.h>\
\
typedef struct defibtillator\
\{\
    int id;\
    char name[256];\
    char adress[256];\
    char phone[16];\
    double longitude;\
    double latitude;\
    \
\} defib;\
\
char* getString(char* str)\
\{\
    int i=0;\
    for(char c = getchar(); (c != '\\0' && c != ';' && c != '\\n'); c = getchar())\
    \{\
        str[i++] = c;\
    \}\
    str[i] = '\\0';\
\}\
\
double getDouble()\
\{\
    char str[32];\
    int i=0;\
    for(char c=getchar(); (c != '\\0' && c != ';' && c != '\\n' && c != ' '); c=getchar())\
    \{\
        str[i++] = (c == ',') ? '.' : c;\
    \}\
    str[i] = '\\0';\
    \
    return strtod(str, NULL);\
\}\
\
void getData(defib *d)\
\{\
    scanf("%d", &d->id); getchar();\
    getString(d->name);\
    getString(d->adress);\
    getString(d->phone);\
    d->longitude = getDouble();\
    d->latitude = getDouble();\
    \
    fprintf(stderr, "%d;%s;%s;%s;%.13lf;%.13lf\\n", d->id, d->name, d->adress, d->phone, d->longitude, d->latitude);\
\}\
\
double getDistance(double lo1, double la1, double lo2, double la2)\
\{\
    double x = (lo2-lo1) * cos( (la1+la2)/2 );\
    double y = (la2 - la1);\
    return sqrt(x*x + y*y) * 6371;\
\}\
\
int main()\
\{\
    double longitude = getDouble(), latitude = getDouble();\
    int n;\
    scanf("%d", &n);\
    \
    defib d;\
    double max = 999999999.9;\
    char max_name[256];\
    \
    for(int i=0; i<n; i++)\
    \{\
        getData(&d);\
        double distance = getDistance(longitude, latitude, d.longitude, d.latitude);\
        if(distance < max)\
        \{\
            max = distance;\
            strcpy(max_name, d.name);\
        \}\
    \}\
    \
    printf("%s", max_name);\
    return 0;\
\}}